version: '3.4'

services:

  app:
    container_name: api
    build:
      context: .
      target: development
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - 3000:3000
    command: >
      sh -c "./scripts/wait-for-it.sh eventstore:1113
      && sleep 10
      && ./scripts/init-subscription.sh
      && npm run start:dev"
    environment: 
      EVENT_STORE_TCP_HOST: eventstore
      EVENT_STORE_TCP_PORT: 1113
      EVENT_STORE_USERNAME: admin
      EVENT_STORE_PASSWORD: changeit
      MONGODB_URI: mongodb://defaultUser:password@mongo:27017/consumer
    networks:
      - backend
    depends_on:
      - eventstore

  mongo:
    image: mongo
    restart: always
    volumes:
      - ./scripts/initdb.d/:/docker-entrypoint-initdb.d/
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_USERNAME: defaultUser
      MONGO_INITDB_PASSWORD: password
      MONGO_INITDB_DATABASE: consumer
    networks:
      - backend
    
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
    networks:
      - backend
    depends_on:
      - mongo 

  eventstore:
    image: eventstore/eventstore
    ports:
      - 2113:2113
      - 1113:1113
    environment:
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
    networks:
      - backend
    depends_on:
      - mongo # Add dependencies to fix create user

networks:
  backend:
    driver: bridge